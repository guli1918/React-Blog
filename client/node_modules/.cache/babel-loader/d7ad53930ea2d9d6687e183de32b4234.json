{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mustafa\\\\Coding\\\\webTasks\\\\React\\\\blog-webpage\\\\client\\\\src\\\\components\\\\singlePost\\\\singlePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './singlePost.css';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const location = useLocation();\n  const path = location.pathname.split('/')[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const publicFolder = 'http://localhost:5000/images/';\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get('/posts/' + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = async () => {\n    setUpdateMode(true);\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      }); // window.location.reload();\n\n      setUpdateMode(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: publicFolder + post.photo,\n        alt: \"Blog-post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"singlePostTitleInput\",\n        type: \"text\",\n        value: title,\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.username === user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.updatedAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescriptionInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostArea\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singlePostDescription\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"kTyxi2vkQntZDH19m6HdEjEXHY4=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Mustafa/Coding/webTasks/React/blog-webpage/client/src/components/singlePost/singlePost.jsx"],"names":["useContext","useEffect","useState","useLocation","axios","Link","Context","SinglePost","location","path","pathname","split","post","setPost","user","publicFolder","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","error","console","log","handleEdit","handleUpdate","put","photo","e","target","value","Date","updatedAt","toDateString"],"mappings":";;;AAAA,SACEA,UADF,EAEEC,SAFF,EAGEC,QAHF,QAIO,OAJP;AAKA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWd,UAAU,CAACM,OAAD,CAA3B;AACA,QAAMS,YAAY,GAChB,+BADF;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IACJnB,QAAQ,CAAC,KAAD,CADV;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAChB,YAAYf,IADI,CAAlB;AAGAI,MAAAA,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;AACAR,MAAAA,QAAQ,CAACM,GAAG,CAACE,IAAJ,CAAST,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAJ,CAASP,IAAV,CAAP;AACD,KAPD;;AAQAI,IAAAA,OAAO;AACR,GAVQ,EAUN,CAACb,IAAD,CAVM,CAAT;;AAYA,QAAMiB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMtB,KAAK,CAACuB,MAAN,CAAc,UAASf,IAAI,CAACgB,GAAI,EAAhC,EAAmC;AACvCH,QAAAA,IAAI,EAAE;AAAEI,UAAAA,QAAQ,EAAEf,IAAI,CAACe;AAAjB;AADiC,OAAnC,CAAN;AAGAC,MAAAA,MAAM,CAACtB,QAAP,CAAgBuB,OAAhB,CAAwB,GAAxB;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GATD;;AAUA,QAAMG,UAAU,GAAG,YAAY;AAC7Bd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMe,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMhC,KAAK,CAACiC,GAAN,CAAW,UAASzB,IAAI,CAACgB,GAAI,EAA7B,EAAgC;AACpCC,QAAAA,QAAQ,EAAEf,IAAI,CAACe,QADqB;AAEpCb,QAAAA,KAFoC;AAGpCE,QAAAA;AAHoC,OAAhC,CAAN,CADE,CAMF;;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KARD,CAQE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,GAAG,EAAEjB,YAAY,GAAGH,IAAI,CAAC0B,KAF3B;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,EAMGlB,UAAU,gBACT;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEJ,KAHT;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,QAAQ,EAAGuB,CAAD,IACRtB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AANZ;AAAA;AAAA;AAAA;AAAA,cADS,gBAWT;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACG7B,IAAI,CAACiB,QAAL,KAAkBf,IAAI,CAACe,QAAvB,iBACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,4BADZ;AAEE,YAAA,OAAO,EAAEM;AAFX;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,SAAS,EAAC,iCADZ;AAEE,YAAA,OAAO,EAAET;AAFX;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAaGV,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAiCE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,gCACU,GADV,eAEE,QAAC,IAAD;AACE,YAAA,EAAE,EAAG,UAASJ,IAAI,CAACiB,QAAS,EAD9B;AAEE,YAAA,SAAS,EAAC,MAFZ;AAAA,mCAIE;AAAA,wBAAIjB,IAAI,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,oBACG,IAAIa,IAAJ,CACC9B,IAAI,CAAC+B,SADN,EAECC,YAFD;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,EAiDGxB,UAAU,gBACT;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,KAAK,EAAEF,IAFT;AAGE,QAAA,QAAQ,EAAGqB,CAAD,IACRpB,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJX;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBACGvB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1DJ,EAgEGE,UAAU,iBACT;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAEgB,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6ED;;GApIuB7B,U;UAELJ,W;;;KAFKI,U","sourcesContent":["import {\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './singlePost.css';\r\nimport { Context } from '../../context/Context';\r\n\r\nexport default function SinglePost() {\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const location = useLocation();\r\n  const path = location.pathname.split('/')[2];\r\n\r\n  const [post, setPost] = useState({});\r\n  const { user } = useContext(Context);\r\n  const publicFolder =\r\n    'http://localhost:5000/images/';\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const [updateMode, setUpdateMode] =\r\n    useState(false);\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      const res = await axios.get(\r\n        '/posts/' + path\r\n      );\r\n      setPost(res.data);\r\n      setTitle(res.data.title);\r\n      setDesc(res.data.desc);\r\n    };\r\n    getPost();\r\n  }, [path]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`/posts/${post._id}`, {\r\n        data: { username: user.username },\r\n      });\r\n      window.location.replace('/');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleEdit = async () => {\r\n    setUpdateMode(true);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`/posts/${post._id}`, {\r\n        username: user.username,\r\n        title,\r\n        desc,\r\n      });\r\n      // window.location.reload();\r\n      setUpdateMode(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='singlePost'>\r\n      <div className='singlePostWrapper'>\r\n        <img\r\n          className='singlePostImg'\r\n          src={publicFolder + post.photo}\r\n          alt='Blog-post'\r\n        />\r\n        {updateMode ? (\r\n          <input\r\n            className='singlePostTitleInput'\r\n            type='text'\r\n            value={title}\r\n            autoFocus\r\n            onChange={(e) =>\r\n              setTitle(e.target.value)\r\n            }\r\n          ></input>\r\n        ) : (\r\n          <h1 className='singlePostTitle'>\r\n            {post.username === user.username && (\r\n              <div className='singlePostEdit'>\r\n                <i\r\n                  className='singlePostIcon far fa-edit'\r\n                  onClick={handleEdit}\r\n                ></i>\r\n                <i\r\n                  className='singlePostIcon far fa-trash-alt'\r\n                  onClick={handleDelete}\r\n                ></i>\r\n              </div>\r\n            )}\r\n            {title}\r\n          </h1>\r\n        )}\r\n        <div className='singlePostInfo'>\r\n          <span className='singlePostAuthor'>\r\n            Author:{' '}\r\n            <Link\r\n              to={`/?user=${post.username}`}\r\n              className='link'\r\n            >\r\n              <b>{post.username}</b>\r\n            </Link>\r\n          </span>\r\n          <span className='singlePostDate'>\r\n            {new Date(\r\n              post.updatedAt\r\n            ).toDateString()}\r\n          </span>\r\n        </div>\r\n        {updateMode ? (\r\n          <textarea\r\n            className='singlePostDescriptionInput'\r\n            value={desc}\r\n            onChange={(e) =>\r\n              setDesc(e.target.value)\r\n            }\r\n          ></textarea>\r\n        ) : (\r\n          <div className='singlePostArea'>\r\n            <p className='singlePostDescription'>\r\n              {desc}\r\n            </p>\r\n          </div>\r\n        )}\r\n        {updateMode && (\r\n          <button\r\n            className='singlePostButton'\r\n            onClick={handleUpdate}\r\n          >\r\n            Update\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}