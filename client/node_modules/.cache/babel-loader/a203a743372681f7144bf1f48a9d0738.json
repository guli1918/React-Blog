{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mustafa\\\\Coding\\\\webTasks\\\\React\\\\blog-webpage\\\\client\\\\src\\\\components\\\\singlePost\\\\singlePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const publicFolder = \"http://localhost:5000/images/\";\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = async () => {\n    setUpdateMode(true);\n  };\n\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: publicFolder + post.photo,\n        alt: \"Blog-post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"singlePostTitleInput\",\n        type: \"text\",\n        value: title,\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.username === user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this), post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author: \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 118\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.updatedAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescriptionInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singlePostDescription\",\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Mustafa/Coding/webTasks/React/blog-webpage/client/src/components/singlePost/singlePost.jsx"],"names":["useContext","useEffect","useState","useLocation","axios","Link","Context","SinglePost","location","path","pathname","split","post","setPost","user","publicFolder","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","error","console","log","handleEdit","photo","e","target","value","Date","updatedAt","toDateString"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWd,UAAU,CAACM,OAAD,CAA3B;AACA,QAAMS,YAAY,GAAG,+BAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,OAAO,GAAG,YAAY;AACxB,YAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,YAAYf,IAAtB,CAAlB;AACAI,MAAAA,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;AACAR,MAAAA,QAAQ,CAACM,GAAG,CAACE,IAAJ,CAAST,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAJ,CAASP,IAAV,CAAP;AACH,KALD;;AAMAI,IAAAA,OAAO;AACV,GARQ,EAQN,CAACb,IAAD,CARM,CAAT;;AAUA,QAAMiB,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMtB,KAAK,CAACuB,MAAN,CAAc,UAASf,IAAI,CAACgB,GAAI,EAAhC,EAAmC;AAAEH,QAAAA,IAAI,EAAE;AAAEI,UAAAA,QAAQ,EAAEf,IAAI,CAACe;AAAjB;AAAR,OAAnC,CAAN;AACAC,MAAAA,MAAM,CAACtB,QAAP,CAAgBuB,OAAhB,CAAwB,GAAxB;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPD;;AAQA,QAAMG,UAAU,GAAG,YAAY;AAC3Bd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIAY,EAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAEG,YAAY,GAAGH,IAAI,CAACwB,KAAxD;AAA+D,QAAA,GAAG,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQhB,UAAU,gBAAG;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAwC,QAAA,IAAI,EAAC,MAA7C;AAAoD,QAAA,KAAK,EAAEJ,KAA3D;AAAkE,QAAA,SAAS,MAA3E;AAA4E,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,QAAQ,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV;AAArG;AAAA;AAAA;AAAA;AAAA,cAAH,gBACN;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACK3B,IAAI,CAACiB,QAAL,KAAkBf,IAAI,CAACe,QAAvB,iBACG;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,4BAAb;AAA0C,YAAA,OAAO,EAAEM;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,iCAAb;AAA+C,YAAA,OAAO,EAAET;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,EAOKd,IAAI,CAACI,KAPV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ,eAeI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,8CAA2C,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASJ,IAAI,CAACiB,QAAS,EAAlC;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,mCAAsD;AAAA,wBAAIjB,IAAI,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,oBAAkC,IAAIW,IAAJ,CAAS5B,IAAI,CAAC6B,SAAd,EAAyBC,YAAzB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,EAoBQtB,UAAU,gBAAG;AAAU,QAAA,SAAS,EAAC,4BAApB;AAAiD,QAAA,KAAK,EAAEF,IAAxD;AAA8D,QAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,cAAH,gBACN;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsC3B,IAAI,CAACM;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ,uBArBZ,eA2BI;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAxEuBX,U;UAEHJ,W;;;KAFGI,U","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./singlePost.css\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nexport default function SinglePost() {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const location = useLocation()\r\n    const path = location.pathname.split(\"/\")[2]\r\n\r\n    const [post, setPost] = useState({});\r\n    const { user } = useContext(Context)\r\n    const publicFolder = \"http://localhost:5000/images/\";\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getPost = async () => {\r\n            const res = await axios.get(\"/posts/\" + path)\r\n            setPost(res.data);\r\n            setTitle(res.data.title);\r\n            setDesc(res.data.desc);\r\n        };\r\n        getPost();\r\n    }, [path])\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await axios.delete(`/posts/${post._id}`, { data: { username: user.username } });\r\n            window.location.replace(\"/\");\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const handleEdit = async () => {\r\n        setUpdateMode(true)\r\n    }\r\n\r\n    console.log(post)\r\n\r\n    return (\r\n        <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                <img className=\"singlePostImg\" src={publicFolder + post.photo} alt=\"Blog-post\" />\r\n                {\r\n                    updateMode ? <input className=\"singlePostTitleInput\" type=\"text\" value={title} autoFocus onChange={(e) => setTitle(e.target.value)}></input> : (\r\n                        <h1 className=\"singlePostTitle\">\r\n                            {post.username === user.username && (\r\n                                <div className=\"singlePostEdit\">\r\n                                    <i className=\"singlePostIcon far fa-edit\" onClick={handleEdit}></i>\r\n                                    <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n                                </div>\r\n                            )}\r\n                            {post.title}\r\n                        </h1>\r\n                    )\r\n                }\r\n                <div className=\"singlePostInfo\">\r\n                    <span className=\"singlePostAuthor\">Author: <Link to={`/?user=${post.username}`} className=\"link\"><b>{post.username}</b></Link></span>\r\n                    <span className=\"singlePostDate\">{new Date(post.updatedAt).toDateString()}</span>\r\n                </div>\r\n                {\r\n                    updateMode ? <textarea className=\"singlePostDescriptionInput\" value={desc} onChange={(e) => setDesc(e.target.value)}></textarea>: (\r\n                        <>\r\n                            <p className=\"singlePostDescription\">{post.desc}</p>\r\n                        </>\r\n\r\n                    )\r\n                }\r\n                <button className=\"singlePostButton\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}