{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mustafa\\\\Coding\\\\webTasks\\\\React\\\\blog-webpage\\\\client\\\\src\\\\components\\\\singlePost\\\\singlePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const publicFolder = \"http://localhost:5000/images/\";\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"posts/\" + path, {\n        username: user.username\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: publicFolder + post.photo,\n        alt: \"Blog-post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.username === (user === null || user === void 0 ? void 0 : user.username), \" && \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: handleEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author: \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 118\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.updatedAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDescription\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"uKVXAJBnk1OQDbbRyJxsEjbZOCg=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Mustafa/Coding/webTasks/React/blog-webpage/client/src/components/singlePost/singlePost.jsx"],"names":["useContext","useEffect","useState","useLocation","axios","Link","Context","SinglePost","location","path","pathname","split","post","setPost","user","publicFolder","getPost","res","get","data","handleDelete","delete","username","error","console","log","photo","handleEdit","title","Date","updatedAt","toDateString","desc"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./singlePost.css\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nexport default function SinglePost() {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const location = useLocation()\r\n    const path = location.pathname.split(\"/\")[2]\r\n\r\n    const [post, setPost] = useState({});\r\n    const { user } = useContext(Context)\r\n    const publicFolder = \"http://localhost:5000/images/\";\r\n\r\n    useEffect(() => {\r\n        const getPost = async () => {\r\n            const res = await axios.get(\"/posts/\" + path)\r\n            setPost(res.data)\r\n        };\r\n        getPost()\r\n    }, [path])\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await axios.delete(\"posts/\" + path, {username:user.username})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                <img className=\"singlePostImg\" src={publicFolder + post.photo} alt=\"Blog-post\" />\r\n                <h1 className=\"singlePostTitle\">\r\n                    {post.username === user?.username} && {\r\n                        <div className=\"singlePostEdit\">\r\n                            <i className=\"singlePostIcon far fa-edit\" onClick={handleEdit}></i>\r\n                            <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n                        </div>\r\n                    }\r\n                    {post.title}\r\n                </h1>\r\n                <div className=\"singlePostInfo\">\r\n                    <span className=\"singlePostAuthor\">Author: <Link to={`/?user=${post.username}`} className=\"link\"><b>{post.username}</b></Link></span>\r\n                    <span className=\"singlePostDate\">{new Date(post.updatedAt).toDateString()}</span>\r\n                </div>\r\n                <p className=\"singlePostDescription\">{post.desc}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}