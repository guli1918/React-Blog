{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mustafa\\\\Coding\\\\webTasks\\\\React\\\\blog-webpage\\\\client\\\\src\\\\pages\\\\settings\\\\Setting.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport { Context } from \"../../context/Context\";\nimport \"./settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Setting() {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const publicFolder = \"http://localhost:5000/images/\";\n  const {\n    user,\n    dispatch\n  } = useContext(Context);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: \"UPDATE_START\"\n    });\n    const updatedUser = {\n      userId: user._id,\n      username,\n      email,\n      password\n    };\n\n    if (file) {\n      const data = new FormData();\n      const filename = Date.now() + file.name;\n      data.append(\"name\", filename);\n      data.append(\"file\", file);\n      updatedUser.photo = filename;\n      console.log(file.name);\n\n      try {\n        await axios.post(\"/upload\", data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    try {\n      const res = await axios.put(\"/users/\" + user._id, updatedUser);\n      setSuccess(true);\n      dispatch({\n        type: \"UPDATE_SUCCESS\",\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: \"UPDATE_FAILURE\"\n      });\n    }\n  };\n\n  console.log(user);\n  console.log(user.profilePic);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"settingsUpdateTitle\",\n          children: \"Update Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"settingsDeleteTitle\",\n          children: \"Delete Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"settingsForm\",\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Profile Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settingsPP\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: file ? URL.createObjectURL(file) : publicFolder + user.profilePic,\n            alt: \"profilepic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"settingsPPIcon far fa-user-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileInput\",\n            className: \"PPAddButton\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: user.email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: user.username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"********\",\n          autoComplete: \"new-password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settingsSubmit\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"successUpdate\",\n          children: \"Profile has been updated!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Setting, \"stJm2TNgneqWfBMguavy9sA6WQs=\");\n\n_c = Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["C:/Users/Mustafa/Coding/webTasks/React/blog-webpage/client/src/pages/settings/Setting.jsx"],"names":["useContext","useState","axios","Sidebar","Context","Setting","file","setFile","username","setUsername","password","setPassword","email","setEmail","success","setSuccess","publicFolder","user","dispatch","handleSubmit","e","preventDefault","type","updatedUser","userId","_id","data","FormData","filename","Date","now","name","append","photo","console","log","post","error","res","put","payload","profilePic","URL","createObjectURL","target","files","value"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./settings.css\";\r\n\r\nexport default function Setting() {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const publicFolder = \"http://localhost:5000/images/\";\r\n\r\n    const { user, dispatch } = useContext(Context);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"UPDATE_START\" });\r\n        const updatedUser = {\r\n            userId: user._id,\r\n            username,\r\n            email,\r\n            password\r\n        };\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            updatedUser.photo = filename;\r\n            console.log(file.name);\r\n            try {\r\n                await axios.post(\"/upload\", data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.put(\"/users/\" + user._id, updatedUser);\r\n            setSuccess(true);\r\n            dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\r\n        } catch (error) {\r\n            console.log(error)\r\n            dispatch({ type: \"UPDATE_FAILURE\" });\r\n        }\r\n    }\r\n\r\n    console.log(user)\r\n    console.log(user.profilePic)\r\n    return (\r\n        <div className=\"settings\">\r\n            <div className=\"settingsWrapper\">\r\n                <div className=\"settingsTitle\">\r\n                    <span className=\"settingsUpdateTitle\">Update Your Account</span>\r\n                    <span className=\"settingsDeleteTitle\">Delete Your Account</span>\r\n                </div>\r\n                <form className=\"settingsForm\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <label>Profile Picture</label>\r\n                    <div className=\"settingsPP\">\r\n                        <img src={file ? URL.createObjectURL(file) : publicFolder + user.profilePic} alt=\"profilepic\" />\r\n                        <label htmlFor=\"fileInput\">\r\n                            <i className=\"settingsPPIcon far fa-user-circle\"></i>\r\n                        </label>\r\n                        <input type=\"file\" id=\"fileInput\" className=\"PPAddButton\" onChange={e => setFile(e.target.files[0])} />\r\n                    </div>\r\n                    <label>Email</label>\r\n                    <input type=\"email\" placeholder={user.email} onChange={e => setEmail(e.target.value)} />\r\n                    <label>Username</label>\r\n                    <input type=\"text\" placeholder={user.username} onChange={e => setUsername(e.target.value)} />\r\n                    <label>Password</label>\r\n                    <input type=\"password\" placeholder=\"********\" autoComplete=\"new-password\" onChange={e => setPassword(e.target.value)} />\r\n                    <button className=\"settingsSubmit\" type=\"submit\">Update</button>\r\n                    {success && <span className=\"successUpdate\">Profile has been updated!</span>}\r\n                </form>\r\n            </div>\r\n            <Sidebar />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}